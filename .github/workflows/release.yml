name: "tagged-release"

on:
  push:
    branches:
      - main

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Set up Git"
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: "Get the latest tag"
        id: tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "::set-output name=latest_tag::$latest_tag"

      - name: "Calculate next version"
        id: next_version
        run: |
          latest_tag=${{ steps.tag.outputs.latest_tag }}
          IFS='.' read -r -a parts <<< "${latest_tag/v/}"
          next_patch=$((parts[2]+1))
          next_version="v${parts[0]}.${parts[1]}.$next_patch"
          
          while git ls-remote --tags origin | grep -q "refs/tags/$next_version"; do
            next_patch=$((next_patch+1))
            next_version="v${parts[0]}.${parts[1]}.$next_patch"
          done

          echo "Next version: $next_version"
          echo "::set-output name=next_version::$next_version"

      - name: "Build & test"
        run: |
          echo "done!"

      - name: "Create new tag"
        run: |
          git tag ${{ steps.next_version.outputs.next_version }}
          git push origin ${{ steps.next_version.outputs.next_version }}

      - name: "Create GitHub Release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.next_version.outputs.next_version }}"
          prerelease: false
          draft: false
          title: "Release ${{ steps.next_version.outputs.next_version }}"
          files: |
            LICENSE.txt
            *.jar